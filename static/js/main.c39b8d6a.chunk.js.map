{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["api","App","useState","query","setQuery","weather","setWeather","date","String","window","Date","slice","className","main","temp","type","placeholder","onChange","e","target","value","onKeyPress","evt","key","fetch","then","res","json","result","console","log","name","sys","country","Math","round","src","logo","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAAe,G,MAAA,IAA0B,kC,OCInCA,EACC,mCADDA,EAEE,2CAyEOC,MAtEf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAcIC,EAAOC,OAAO,IAAIC,OAAOC,MAG7B,OAFAH,EAAOA,EAAKI,MAAM,EAAG,IAGnB,qBACEC,UACyB,oBAAhBP,EAAQQ,MACXR,EAAQQ,KAAKC,KAAO,GAClB,MAEF,WANR,SASE,iCACE,qBAAKF,UAAU,aAAf,SACE,uBACEG,KAAK,OACLH,UAAU,aACVI,YAAY,YACZC,SAAU,SAACC,GAAD,OAAOd,EAASc,EAAEC,OAAOC,QACnCA,MAAOjB,EACPkB,WAjCK,SAACC,GACE,UAAZA,EAAIC,KACNC,MAAM,GAAD,OAAIxB,EAAJ,qBAAyBG,EAAzB,+BAAqDH,IACvDyB,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLtB,EAAWsB,GACXxB,EAAS,IACTyB,QAAQC,IAAIF,WA6BU,oBAAhBvB,EAAQQ,KACd,gCACE,sBAAKD,UAAU,eAAf,UACE,sBAAKA,UAAU,WAAf,UACGP,EAAQ0B,KADX,KACmB1B,EAAQ2B,IAAIC,WAE/B,qBAAKrB,UAAU,OAAf,SAAuBL,OAEzB,sBAAKK,UAAU,cAAf,UACE,sBAAKA,UAAU,OAAf,UAAuBsB,KAAKC,MAAM9B,EAAQQ,KAAKC,MAA/C,WACA,qBAAKF,UAAU,UAAf,SAA0BP,EAAQA,QAAQ,GAAGQ,aAIjD,sBAAKD,UAAU,YAAf,UACE,qBAAKA,UAAU,QAAf,0CACA,iCACE,qBAAKwB,IAAKC,EAAMzB,UAAU,WAAW0B,IAAI,WAG3C,qBAAK1B,UAAU,aAAf,0DCzDG2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.c39b8d6a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import \"./App.css\";\nimport React, { useState } from \"react\";\nimport logo from \"./logo.svg\";\n\nconst api = {\n  key: \"46809d474ad542556436c5fa627a7f5b\",\n  base: \"https://api.openweathermap.org/data/2.5/\",\n};\n\nfunction App() {\n  const [query, setQuery] = useState(\"\");\n  const [weather, setWeather] = useState({});\n\n  const search = (evt) => {\n    if (evt.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n        .then((res) => res.json())\n        .then((result) => {\n          setWeather(result);\n          setQuery(\"\");\n          console.log(result);\n        });\n    }\n  };\n\n  let date = String(new window.Date());\n  date = date.slice(3, 15);\n\n  return (\n    <div\n      className={\n        typeof weather.main != \"undefined\"\n          ? weather.main.temp < 16\n            ? \"app\"\n            : \"app warm\"\n          : \"app warm\"\n      }\n    >\n      <main>\n        <div className=\"search-box\">\n          <input\n            type=\"text\"\n            className=\"search-bar\"\n            placeholder=\"Search...\"\n            onChange={(e) => setQuery(e.target.value)}\n            value={query}\n            onKeyPress={search}\n          />\n        </div>\n        {typeof weather.main != \"undefined\" ? (\n          <div>\n            <div className=\"location-box\">\n              <div className=\"location\">\n                {weather.name}, {weather.sys.country}\n              </div>\n              <div className=\"date\">{date}</div>\n            </div>\n            <div className=\"weather-box\">\n              <div className=\"temp\">{Math.round(weather.main.temp)}Â°C</div>\n              <div className=\"weather\">{weather.weather[0].main}</div>\n            </div>\n          </div>\n        ) : (\n          <div className=\"index-box\">\n            <div className=\"index\">This is an React application</div>\n            <center>\n              <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            </center>\n\n            <div className=\"input-text\">\n              Please give the input in search bar\n            </div>\n          </div>\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}